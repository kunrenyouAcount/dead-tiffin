openapi: 3.0.0
info:
  description: Tiffin Service API
  title: Tiffin API
  version: "1.0"
servers:
- url: http://localhost:4000
  description: 接続先
tags:
- description: PrefectureMaster
  name: PrefectureMaster
- description: AreaMaster
  name: AreaMaster
- description: StationMaster
  name: StationMaster
- description: GenreMaster
  name: GenreMaster
- description: BudgetMaster
  name: BudgetMaster
- description: Shop
  name: Shop
- description: ShopAccount
  name: ShopAccount
- description: ShopInfo
  name: ShopInfo
- description: Menu
  name: Menu
- description: ShopPhoto
  name: ShopPhoto
- description: UserAccount
  name: UserAccount
- description: UserInfo
  name: UserInfo
- description: UserPhoto
  name: UserPhoto
paths:
  /masters/prefecture-masters/:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrefectureMasters'
          description: |
            都道府県のマスターを全件返します。
      summary: |
        都道府県のマスターを全件返します。
      tags:
      - PrefectureMaster
  /masters/area-masters/:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaMasters'
          description: |
            エリアのマスターを全件返します。
      summary: |
        エリアのマスターを全件返します。
      tags:
      - AreaMaster
  /masters/station-masters/:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationMasters'
          description: |
            駅名のマスターを全件返します。
      summary: |
        駅名ののマスターを全件返します。
      tags:
      - StationMaster
  /masters/genre-masters/:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreMasters'
          description: |
            ジャンルのマスターを全件返します。
      summary: |
        ジャンルのマスターを全件返します。
      tags:
      - GenreMaster
  /masters/budget-masters/:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetMasters'
          description: |
            予算のマスターを全件返します。
      summary: |
        予算のマスターを全件返します。
      tags:
      - BudgetMaster
  /shop/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopRegisterRequest'
      responses:
        "201":
          description: |
            店舗アカウントと店舗情報を新規登録しました。
        "404":
          description: NOT FOUND
        "422":
          description: Validation Error
      summary: |
        店舗アカウントと店舗情報を新規登録します。
        登録済みのメールアドレスが入力された場合、確認用のパスワードと一致しない場合に422を返します。
      tags:
      - Shop
  /shop-account/:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAccountResponse'
          description: |
            店舗アカウントを返却します。
        "404":
          description: Not Found
      summary: |
        指定した店舗アカウントを取得します。
        指定した店舗アカウントが存在しない場合、404を返します。
      tags:
      - ShopAccount
  /shop-info/:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopInfoResponse'
          description: |
            店舗の詳細情報を返却します。
        "404":
          description: Not Found
      summary: |
        指定した店舗情報を取得します。
        指定した店舗情報が存在しない場合、404を返します。
      tags:
      - ShopInfo
  /menus/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuRegisterRequest'
      responses:
        "201":
          description: |
            メニューを追加しました。
        "401":
          description: Unauthorized
        "404":
          description: NOT FOUND
        "422":
          description: Validation Error
      summary: |
        メニューを追加しました。
        登録済みのメールアドレスが入力された場合、確認用のパスワードと一致しない場合に422を返します。
      tags:
      - Menu
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenusResponse'
          description: |
            メニュー一覧を返却します。
        "404":
          description: Not Found
      summary: |
        メニューの一覧を返却します。
      tags:
      - Menu
  /menus/{id}:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuResponse'
          description: |
            メニューを返却します。
        "404":
          description: Not Found
      summary: |
        メニューを返却します。
      tags:
      - Menu

components:
  schemas:
    PrefectureMaster:
      example:
        id: 1
        name: 東京都
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    PrefectureMasters:
      example:
          - id: 1
            name: 東京都
          - id: 2
            name: 埼玉県
      properties:
        prefectureMasters:
          items:
            $ref: '#/components/schemas/PrefectureMaster'
          type: array
      required:
        - prefectureMasters
    AreaMaster:
      example:
        id: 1
        prefectureId: 1
        name: 新宿・代々木・大久保
      properties:
        id:
          type: integer
        prefectureId:
          type: integer
        name:
          type: string
      required:
      - id
      - prefectureId
      - name
      type: object
    AreaMasters:
      example:
          - id: 1
            prefectureId: 1
            name: 新宿・代々木・大久保
          - id: 2
            prefectureId: 1
            name: 池袋・目白
      properties:
        areaMasters:
          items:
            $ref: '#/components/schemas/AreaMaster'
          type: array
      required:
        - areaMasters
    StationMaster:
      example:
        id: 1
        areaId: 1
        name: 新宿
      properties:
        id:
          type: integer
        areaId:
          type: integer
        name:
          type: string
      required:
      - id
      - areaId
      - name
      type: object
    StationMasters:
      example:
          - id: 1
            areaId: 1
            name: 新宿
          - id: 2
            areaId: 1
            name: 大久保
      properties:
        stationMasters:
          items:
            $ref: '#/components/schemas/StationMaster'
          type: array
      required:
        - stationMasters
    GenreMaster:
      example:
        id: 1
        name: 和食
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    GenreMasters:
      example:
          - id: 1
            name: 和食
          - id: 2
            name: 洋食
      properties:
        genreMasters:
          items:
            $ref: '#/components/schemas/GenreMaster'
          type: array
      required:
        - genreMasters
    BudgetMaster:
      example:
        id: 1
        lowerLimit: 0
        upperLimit: 500
      properties:
        id:
          type: integer
        lowerLimit:
          type: integer
        upperLimit:
          type: integer
      required:
      - id
      - lowerLimit
      - upperLimit
      type: object
    BudgetMasters:
      example:
          - id: 1
            lowerLimit: 0
            upperLimit: 500
          - id: 2
            lowerLimit: 501
            upperLimit: 1000
      properties:
        budgetMasters:
          items:
            $ref: '#/components/schemas/BudgetMaster'
          type: array
      required:
        - budgetMasters
      type: array
    ShopAccountRegisterRequest:
      example:
        name: 店舗アカウント
        email: test@test.com
        password: testtest
        passwordConfirmation: testtest
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
      required:
        - name
        - email
        - password
        - passwordConfirmation
      type: object
    ShopInfoRegisterRequest:
      example:
        name: 店舗名
        prefecture: 1
        area: 1
        station: 1
        openTime: 11:00
        closeTime: 14:00
        address: 東京都新宿区歌舞伎町1-1-1
        tel: 03-0000-0000
      properties:
        name:
          type: string
        prefecture:
          type: integer
        area:
          type: integer
        station:
          type: integer
        openTime:
          type: string
        closeTime:
          type: string
        addreess:
          type: string
        tel:
          type: string
      required:
        - name
        - prefecture
        - area
        - station
        - openTime
        - closeTime
        - addreess
        - tel
      type: object
    ShopRegisterRequest:
      properties:
        shopAccount:
          $ref: '#/components/schemas/ShopAccountRegisterRequest'
          type: object
        shopInfo:
          $ref: '#/components/schemas/ShopInfoRegisterRequest'
          type: object
      required:
        - shopAccount
        - shopInfo
      type:
        object
    ShopAccountResponse:
      example:
        id: 1
        name: 店舗アカウント
        email: test@test.com
        password: testtest
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - id
        - name
        - email
        - password
      type: object
    ShopAccountChangeResponse:
      example:
        id: 1
        name: 店舗アカウント
        email: test@test.com
        password: testtest
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - id
        - name
        - email
        - password
      type: object
    ShopInfoResponse:
      example:
        id: 1
        shopAccountId: 1
        name: 店舗名
        prefecture: 1
        area: 1
        station: 1
        openTime: 11:00
        closeTime: 14:00
        address: 東京都新宿区歌舞伎町1-1-1
        tel: 03-0000-0000
      properties:
        id:
          type: integer
        shopAccountId:
          type: integer
        name:
          type: string
        prefecture:
          type: integer
        area:
          type: integer
        station:
          type: integer
        openTime:
          type: string
        closeTime:
          type: string
        addreess:
          type: string
        tel:
          type: string
      required:
        - id
        - shopAccountId
        - name
        - prefecture
        - area
        - station
        - openTime
        - closeTime
        - addreess
        - tel
      type: object
    MenuRegisterRequest:
      example:
        name: ハンバーグ定食
        genreId: 2
        price: 680
      properties:
        name:
          type: string
        genreId:
          type: integer
        price:
          type: integer
      required:
        - name
        - genreId
        - price
      type: object
    MenuResponse:
      example:
        id: 1
        shopId: 1
        name: ハンバーグ定食
        genreId: 2
        price: 680
      properties:
        id:
          type: integer
        shopId:
          type: integer
        name:
          type: string
        genreId:
          type: integer
        price:
          type: integer
      required:
        - id
        - shopid
        - name
        - genreId
        - price
      type: object
    MenusResponse:
      example:
          - id: 1
            shopId: 1
            name: ハンバーグ定食
            genreId: 2
            price: 680
          - id: 2
            shopId: 1
            name: オムライス
            genreId: 3
            price: 800
      properties:
        menus:
          items:
            $ref: '#/components/schemas/MenuResponse'
          type: array
      required:
        - menus